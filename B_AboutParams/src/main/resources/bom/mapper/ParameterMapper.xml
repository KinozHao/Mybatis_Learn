<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bom.mapper.ParameterMapper">
    <select id="allUser" resultType="YongHu">
        select * from mybatisframe.user;
    </select>

    <!--1.单个参数-->
    <!--获取参数的两种方式:#{}占位符赋值 ${}字符串拼接-->
    <!--当为单个字面量类型,两种方式都可以,需注意${}单引号问题'${id}'-->
    <select id="findUserById" resultType="YongHu">
        select * from mybatisframe.user where id = #{id};
    </select>

    <!--2.多个参数-->
    <!--接口方法中存在多个参数时候,Mybatis会把这写数据放在一个Map集合中-->
    <!--#{}中写arg0...或param1...,两者代表Map集合中的键,来访问值-->
    <select id="checkLoginIn" resultType="YongHu">
        select * from mybatisframe.user where username = #{arg0} and password = #{arg1};
    </select>

    <!--3.多个参数:自定义Map-->
    <select id="checkLoginInByMap" resultType="YongHu">
        select * from mybatisframe.user where username = #{username} and password = #{password};
    </select>

    <!--4.接口方法的参数是实体类类型参数时
    以属性的方式访问属性值-->
    <insert id="insertUser">
        insert into mybatisframe.user values (null,#{username},#{password},#{age},#{sex},#{email});
    </insert>

    <!--5.(常用方式)2和3方式结合,使用@Param,相当于自定义了键-->
    <select id="checkLoginInByParam" resultType="YongHu">
        select * from mybatisframe.user where username = #{username} and password = #{password};
    </select>
</mapper>   
    